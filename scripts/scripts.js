"use strict";angular.module("botConfApp",["xeditable","ui.bootstrap","ngMap","ngRoute","LocalStorageModule","ui.sortable"]).config(["$routeProvider","$locationProvider",function(a,b){a.when("/",{templateUrl:"./views/general_config.html",controller:"GeneralCtrl"}).when("/task-config",{templateUrl:"./views/manage_tasks.html",controller:"TaskCtrl"}).when("/task-config/:task",{templateUrl:"./views/edit_task.html",controller:"EditTaskCtrl"}).when("/get-config",{templateUrl:"./views/get_config.html",controller:"GetConfigCtrl"})}]).run(["editableOptions",function(a){a.theme="bs3"}]),function(a,b){"object"==typeof exports?module.exports=b(require("angular")):"function"==typeof define&&define.amd?define(["angular"],b):b(a.angular)}(this,function(angular){return angular.module("ngMap",[]),function(){var a,b=function(b,c,d,e,f,g,h){a=f;var i=this;i.mapOptions,i.mapEvents,i.eventListeners,i.addObject=function(a,b){if(i.map){i.map[a]=i.map[a]||{};var c=Object.keys(i.map[a]).length;i.map[a][b.id||c]=b,i.map instanceof google.maps.Map&&("infoWindows"!=a&&b.setMap&&b.setMap&&b.setMap(i.map),b.centered&&b.position&&i.map.setCenter(b.position),"markers"==a&&i.objectChanged("markers"),"customMarkers"==a&&i.objectChanged("customMarkers"))}},i.deleteObject=function(a,b){if(b.map){var c=b.map[a];for(var d in c)c[d]===b&&(google.maps.event.clearInstanceListeners(b),delete c[d]);b.map&&b.setMap&&b.setMap(null),"markers"==a&&i.objectChanged("markers"),"customMarkers"==a&&i.objectChanged("customMarkers")}},i.observeAttrSetObj=function(b,c,d){if(c.noWatcher)return!1;for(var e=a.getAttrsToObserve(b),f=0;f<e.length;f++){var h=e[f];c.$observe(h,g.observeAndSet(h,d))}},i.zoomToIncludeMarkers=function(){var a=new google.maps.LatLngBounds;for(var b in i.map.markers)a.extend(i.map.markers[b].getPosition());for(var c in i.map.customMarkers)a.extend(i.map.customMarkers[c].getPosition());i.map.fitBounds(a)},i.objectChanged=function(a){!i.map||"markers"!=a&&"customMarkers"!=a||"auto"!=i.map.zoomToIncludeMarkers||i.zoomToIncludeMarkers()},i.initializeMap=function(){var f=i.mapOptions,k=i.mapEvents,l=i.map;if(i.map=h.getMapInstance(c[0]),g.setStyle(c[0]),l){var m=a.filter(d),n=a.getOptions(m),o=a.getControlOptions(m);f=angular.extend(n,o);for(var p in l){var q=l[p];if("object"==typeof q)for(var r in q)i.addObject(p,q[r])}i.map.showInfoWindow=i.showInfoWindow,i.map.hideInfoWindow=i.hideInfoWindow}f.zoom=f.zoom||15;var s=f.center;if(!f.center||"string"==typeof s&&s.match(/\{\{.*\}\}/))f.center=new google.maps.LatLng(0,0);else if(!(s instanceof google.maps.LatLng)){var t=f.center;delete f.center,g.getGeoLocation(t,f.geoLocationOptions).then(function(a){i.map.setCenter(a);var c=f.geoCallback;c&&e(c)(b)},function(){f.geoFallbackCenter&&i.map.setCenter(f.geoFallbackCenter)})}i.map.setOptions(f);for(var u in k){var v=k[u],w=google.maps.event.addListener(i.map,u,v);i.eventListeners[u]=w}i.observeAttrSetObj(j,d,i.map),i.singleInfoWindow=f.singleInfoWindow,google.maps.event.trigger(i.map,"resize"),google.maps.event.addListenerOnce(i.map,"idle",function(){g.addMap(i),f.zoomToIncludeMarkers&&i.zoomToIncludeMarkers(),b.map=i.map,b.$emit("mapInitialized",i.map),d.mapInitialized&&e(d.mapInitialized)(b,{map:i.map})})},b.google=google;var j=a.orgAttributes(c),k=a.filter(d),l=a.getOptions(k,{scope:b}),m=a.getControlOptions(k),n=angular.extend(l,m),o=a.getEvents(b,k);Object.keys(o).length&&void 0,i.mapOptions=n,i.mapEvents=o,i.eventListeners={},l.lazyInit?(i.map={id:d.id},g.addMap(i)):i.initializeMap(),l.triggerResize&&google.maps.event.trigger(i.map,"resize"),c.bind("$destroy",function(){h.returnMapInstance(i.map),g.deleteMap(i)})};b.$inject=["$scope","$element","$attrs","$parse","Attr2MapOptions","NgMap","NgMapPool"],angular.module("ngMap").controller("__MapController",b)}(),function(){var a,b=function(b,d,e,f){f=f[0]||f[1];var g=a.orgAttributes(d),h=a.filter(e),i=a.getOptions(h,{scope:b}),j=a.getEvents(b,h),k=c(i,j);f.addObject("bicyclingLayers",k),f.observeAttrSetObj(g,e,k),d.bind("$destroy",function(){f.deleteObject("bicyclingLayers",k)})},c=function(a,b){var c=new google.maps.BicyclingLayer(a);for(var d in b)google.maps.event.addListener(c,d,b[d]);return c},d=function(c){return a=c,{restrict:"E",require:["?^map","?^ngMap"],link:b}};d.$inject=["Attr2MapOptions"],angular.module("ngMap").directive("bicyclingLayer",d)}(),function(){var a,b,c,d=function(c,d,e,f){f=f[0]||f[1];var g=a.filter(e),h=a.getOptions(g,{scope:c}),i=a.getEvents(c,g),j=d[0].parentElement.removeChild(d[0]);b(j.innerHTML.trim())(c);for(var k in i)google.maps.event.addDomListener(j,k,i[k]);f.addObject("customControls",j);var l=h.position;f.map.controls[google.maps.ControlPosition[l]].push(j),d.bind("$destroy",function(){f.deleteObject("customControls",j)})},e=function(e,f,g){return a=e,b=f,c=g,{restrict:"E",require:["?^map","?^ngMap"],link:d}};e.$inject=["Attr2MapOptions","$compile","NgMap"],angular.module("ngMap").directive("customControl",e)}(),function(){var a,b,c,d,e=function(a){a=a||{},this.el=document.createElement("div"),this.el.style.display="inline-block",this.el.style.visibility="hidden",this.visible=!0;for(var b in a)this[b]=a[b]},f=function(){e.prototype=new google.maps.OverlayView,e.prototype.setContent=function(a,b){this.el.innerHTML=a,this.el.style.position="absolute",b&&c(angular.element(this.el).contents())(b)},e.prototype.getDraggable=function(){return this.draggable},e.prototype.setDraggable=function(a){this.draggable=a},e.prototype.getPosition=function(){return this.position},e.prototype.setPosition=function(a){if(a&&(this.position=a),this.getProjection()&&"function"==typeof this.position.lng){var c=this.getProjection().fromLatLngToDivPixel(this.position),d=this,e=function(){var a=Math.round(c.x-d.el.offsetWidth/2),b=Math.round(c.y-d.el.offsetHeight-10);d.el.style.left=a+"px",d.el.style.top=b+"px",d.el.style.visibility="visible"};d.el.offsetWidth&&d.el.offsetHeight?e():b(e,300)}},e.prototype.setZIndex=function(a){a&&(this.zIndex=a),this.el.style.zIndex=this.zIndex},e.prototype.getVisible=function(){return this.visible},e.prototype.setVisible=function(a){this.el.style.display=a?"inline-block":"none",this.visible=a},e.prototype.addClass=function(a){var b=this.el.className.trim().split(" ");b.indexOf(a)==-1&&b.push(a),this.el.className=b.join(" ")},e.prototype.removeClass=function(a){var b=this.el.className.split(" "),c=b.indexOf(a);c>-1&&b.splice(c,1),this.el.className=b.join(" ")},e.prototype.onAdd=function(){this.getPanes().overlayMouseTarget.appendChild(this.el)},e.prototype.draw=function(){this.setPosition(),this.setZIndex(this.zIndex),this.setVisible(this.visible)},e.prototype.onRemove=function(){this.el.parentNode.removeChild(this.el)}},g=function(b,c){return function(f,g,h,i){i=i[0]||i[1];var j=a.orgAttributes(g),k=a.filter(h),l=a.getOptions(k,{scope:f}),m=a.getEvents(f,k);g[0].style.display="none";var n=new e(l);f.$watch("["+c.join(",")+"]",function(){n.setContent(b,f)}),n.setContent(g[0].innerHTML,f);var o=g[0].firstElementChild.className;n.addClass("custom-marker"),n.addClass(o),l.position instanceof google.maps.LatLng||d.getGeoLocation(l.position).then(function(a){n.setPosition(a)});for(var p in m)google.maps.event.addDomListener(n.el,p,m[p]);i.addObject("customMarkers",n),i.observeAttrSetObj(j,h,n),g.bind("$destroy",function(){i.deleteObject("customMarkers",n)})}},h=function(e,h,i,j){return a=i,b=e,c=h,d=j,{restrict:"E",require:["?^map","?^ngMap"],compile:function(a){f(),a[0].style.display="none";var b=a.html(),c=b.match(/{{([^}]+)}}/g),d=[];return(c||[]).forEach(function(a){var b=a.replace("{{","").replace("}}","");a.indexOf("::")==-1&&a.indexOf("this.")==-1&&d.indexOf(b)==-1&&d.push(a.replace("{{","").replace("}}",""))}),g(b,d)}}};h.$inject=["$timeout","$compile","Attr2MapOptions","NgMap"],angular.module("ngMap").directive("customMarker",h)}(),function(){var a,b,c,d=function(a,b){a.panel&&(a.panel=document.getElementById(a.panel)||document.querySelector(a.panel));var c=new google.maps.DirectionsRenderer(a);for(var d in b)google.maps.event.addListener(c,d,b[d]);return c},e=function(a,d){var e=new google.maps.DirectionsService,f=d;f.travelMode=f.travelMode||"DRIVING";var g=["origin","destination","travelMode","transitOptions","unitSystem","durationInTraffic","waypoints","optimizeWaypoints","provideRouteAlternatives","avoidHighways","avoidTolls","region"];for(var h in f)g.indexOf(h)===-1&&delete f[h];f.waypoints&&("[]"!=f.waypoints&&""!==f.waypoints||delete f.waypoints);var i=function(c){e.route(c,function(c,d){d==google.maps.DirectionsStatus.OK&&b(function(){a.setDirections(c)})})};f.origin&&f.destination&&("current-location"==f.origin?c.getCurrentPosition().then(function(a){f.origin=new google.maps.LatLng(a.coords.latitude,a.coords.longitude),i(f)}):"current-location"==f.destination?c.getCurrentPosition().then(function(a){f.destination=new google.maps.LatLng(a.coords.latitude,a.coords.longitude),i(f)}):i(f))},f=function(f,g,h,i){var j=f;a=i,b=g,c=h;var k=function(c,f,g,h){h=h[0]||h[1];var i=j.orgAttributes(f),k=j.filter(g),l=j.getOptions(k,{scope:c}),m=j.getEvents(c,k),n=j.getAttrsToObserve(i),o=d(l,m);h.addObject("directionsRenderers",o),n.forEach(function(a){!function(a){g.$observe(a,function(c){if("panel"==a)b(function(){var a=document.getElementById(c)||document.querySelector(c);a&&o.setPanel(a)});else if(l[a]!==c){var d=j.toOptionValue(c,{key:a});l[a]=d,e(o,l)}})}(a)}),a.getMap().then(function(){e(o,l)}),f.bind("$destroy",function(){h.deleteObject("directionsRenderers",o)})};return{restrict:"E",require:["?^map","?^ngMap"],link:k}};f.$inject=["Attr2MapOptions","$timeout","NavigatorGeolocation","NgMap"],angular.module("ngMap").directive("directions",f)}(),function(){angular.module("ngMap").directive("drawingManager",["Attr2MapOptions",function(a){var b=a;return{restrict:"E",require:["?^map","?^ngMap"],link:function(a,c,d,e){e=e[0]||e[1];var f=b.filter(d),g=b.getOptions(f,{scope:a}),h=b.getControlOptions(f),i=b.getEvents(a,f),j=new google.maps.drawing.DrawingManager({drawingMode:g.drawingmode,drawingControl:g.drawingcontrol,drawingControlOptions:h.drawingControlOptions,circleOptions:g.circleoptions,markerOptions:g.markeroptions,polygonOptions:g.polygonoptions,polylineOptions:g.polylineoptions,rectangleOptions:g.rectangleoptions});d.$observe("drawingControlOptions",function(a){j.drawingControlOptions=b.getControlOptions({drawingControlOptions:a}).drawingControlOptions,j.setDrawingMode(null),j.setMap(e.map)}),d.$observe("drawingcontrol",function(a){j.setOptions({drawingControl:"true"==a})});for(var k in i)google.maps.event.addListener(j,k,i[k]);e.addObject("mapDrawingManager",j),c.bind("$destroy",function(){e.deleteObject("mapDrawingManager",j)})}}}])}(),function(){angular.module("ngMap").directive("dynamicMapsEngineLayer",["Attr2MapOptions",function(a){var b=a,c=function(a,b){var c=new google.maps.visualization.DynamicMapsEngineLayer(a);for(var d in b)google.maps.event.addListener(c,d,b[d]);return c};return{restrict:"E",require:["?^map","?^ngMap"],link:function(a,d,e,f){f=f[0]||f[1];var g=b.filter(e),h=b.getOptions(g,{scope:a}),i=b.getEvents(a,g,i),j=c(h,i);f.addObject("mapsEngineLayers",j)}}}])}(),function(){angular.module("ngMap").directive("fusionTablesLayer",["Attr2MapOptions",function(a){var b=a,c=function(a,b){var c=new google.maps.FusionTablesLayer(a);for(var d in b)google.maps.event.addListener(c,d,b[d]);return c};return{restrict:"E",require:["?^map","?^ngMap"],link:function(a,d,e,f){f=f[0]||f[1];var g=b.filter(e),h=b.getOptions(g,{scope:a}),i=b.getEvents(a,g,i),j=c(h,i);f.addObject("fusionTablesLayers",j)}}}])}(),function(){angular.module("ngMap").directive("heatmapLayer",["Attr2MapOptions","$window",function(a,b){var c=a;return{restrict:"E",require:["?^map","?^ngMap"],link:function(a,d,e,f){f=f[0]||f[1];var g=c.filter(e),h=c.getOptions(g,{scope:a});if(h.data=b[e.data]||a[e.data],!(h.data instanceof Array))throw"invalid heatmap data";h.data=new google.maps.MVCArray(h.data);var i=new google.maps.visualization.HeatmapLayer(h);c.getEvents(a,g);f.addObject("heatmapLayers",i)}}}])}(),function(){var a=function(a,b,c,d,e){var f=a,g=function(a,d,e){var f;!a.position||a.position instanceof google.maps.LatLng||delete a.position,f=new google.maps.InfoWindow(a);for(var g in d)g&&google.maps.event.addListener(f,g,d[g]);var h=e.html().trim();if(1!=angular.element(h).length)throw"info-window working as a template must have a container";return f.__template=h.replace(/\s?ng-non-bindable[='"]+/,""),f.__open=function(a,d,e){c(function(){e&&(d.anchor=e);var c=b(f.__template)(d);f.setContent(c[0]),d.$apply(),e&&e.getPosition?f.open(a,e):e&&e instanceof google.maps.LatLng?(f.open(a),f.setPosition(e)):f.open(a);var g=f.content.parentElement.parentElement.parentElement;g.className="ng-map-info-window"})},f},h=function(a,b,c,h){h=h[0]||h[1],b.css("display","none");var i,j=f.orgAttributes(b),k=f.filter(c),l=f.getOptions(k,{scope:a}),m=f.getEvents(a,k);!l.position||l.position instanceof google.maps.LatLng||(i=l.position);var n=g(l,m,b);i&&e.getGeoLocation(i).then(function(b){n.setPosition(b),n.__open(h.map,a,b);var e=c.geoCallback;e&&d(e)(a)}),h.addObject("infoWindows",n),h.observeAttrSetObj(j,c,n),h.showInfoWindow=h.map.showInfoWindow=h.showInfoWindow||function(b,c,d){var e="string"==typeof b?b:c,f="string"==typeof b?c:d;if("string"==typeof f)if("undefined"!=typeof h.map.markers&&"undefined"!=typeof h.map.markers[f])f=h.map.markers[f];else{if("undefined"==typeof h.map.customMarkers[f])throw new Error("Cant open info window for id "+f+". Marker or CustomMarker is not defined");f=h.map.customMarkers[f]}var g=h.map.infoWindows[e],i=f?f:this.getPosition?this:null;g.__open(h.map,a,i),h.singleInfoWindow&&(h.lastInfoWindow&&a.hideInfoWindow(h.lastInfoWindow),h.lastInfoWindow=e)},h.hideInfoWindow=h.map.hideInfoWindow=h.hideInfoWindow||function(a,b){var c="string"==typeof a?a:b,d=h.map.infoWindows[c];d.close()},a.showInfoWindow=h.map.showInfoWindow,a.hideInfoWindow=h.map.hideInfoWindow,e.getMap().then(function(b){if(n.visible&&n.__open(b,a),n.visibleOnMarker){var c=n.visibleOnMarker;n.__open(b,a,b.markers[c])}})};return{restrict:"E",require:["?^map","?^ngMap"],link:h}};a.$inject=["Attr2MapOptions","$compile","$timeout","$parse","NgMap"],angular.module("ngMap").directive("infoWindow",a)}(),function(){angular.module("ngMap").directive("kmlLayer",["Attr2MapOptions",function(a){var b=a,c=function(a,b){var c=new google.maps.KmlLayer(a);for(var d in b)google.maps.event.addListener(c,d,b[d]);return c};return{restrict:"E",require:["?^map","?^ngMap"],link:function(a,d,e,f){f=f[0]||f[1];var g=b.orgAttributes(d),h=b.filter(e),i=b.getOptions(h,{scope:a}),j=b.getEvents(a,h),k=c(i,j);f.addObject("kmlLayers",k),f.observeAttrSetObj(g,e,k),d.bind("$destroy",function(){f.deleteObject("kmlLayers",k)})}}}])}(),function(){angular.module("ngMap").directive("mapData",["Attr2MapOptions","NgMap",function(a,b){var c=a;return{restrict:"E",require:["?^map","?^ngMap"],link:function(a,d,e){var f=c.filter(e),g=c.getOptions(f,{scope:a}),h=c.getEvents(a,f,h);b.getMap().then(function(b){for(var c in g){var d=g[c];"function"==typeof a[d]?b.data[c](a[d]):b.data[c](d)}for(var e in h)b.data.addListener(e,h[e])})}}}])}(),function(){var a,b,c,d,e=function(c,e,f){var g=f.mapLazyLoadParams||f.mapLazyLoad;if(window.lazyLoadCallback=function(){a(function(){e.html(d),b(e.contents())(c)},100)},void 0===window.google||void 0===window.google.maps){var h=document.createElement("script");h.src=g+(g.indexOf("?")>-1?"&":"?")+"callback=lazyLoadCallback",document.querySelector('script[src="'+h.src+'"]')||document.body.appendChild(h)}else e.html(d),b(e.contents())(c)},f=function(a,b){return!b.mapLazyLoad&&void 0,d=a.html(),c=b.mapLazyLoad,(void 0===window.google||void 0===window.google.maps)&&(a.html(""),{pre:e})},g=function(c,d){return b=c,a=d,{compile:f}};g.$inject=["$compile","$timeout"],angular.module("ngMap").directive("mapLazyLoad",g)}(),function(){angular.module("ngMap").directive("mapType",["$parse","NgMap",function(a,b){return{restrict:"E",require:["?^map","?^ngMap"],link:function(c,d,e,f){f=f[0]||f[1];var g,h=e.name;if(!h)throw"invalid map-type name";if(g=a(e.object)(c),!g)throw"invalid map-type object";b.getMap().then(function(a){a.mapTypes.set(h,g)}),f.addObject("mapTypes",g)}}}])}(),function(){var a=function(){return{restrict:"AE",controller:"__MapController",conrollerAs:"ngmap"}};angular.module("ngMap").directive("map",[a]),angular.module("ngMap").directive("ngMap",[a])}(),function(){angular.module("ngMap").directive("mapsEngineLayer",["Attr2MapOptions",function(a){var b=a,c=function(a,b){var c=new google.maps.visualization.MapsEngineLayer(a);for(var d in b)google.maps.event.addListener(c,d,b[d]);return c};return{restrict:"E",require:["?^map","?^ngMap"],link:function(a,d,e,f){f=f[0]||f[1];var g=b.filter(e),h=b.getOptions(g,{scope:a}),i=b.getEvents(a,g,i),j=c(h,i);f.addObject("mapsEngineLayers",j)}}}])}(),function(){var a,b,c,d=function(a,b){var d;if(c.defaultOptions.marker)for(var e in c.defaultOptions.marker)"undefined"==typeof a[e]&&(a[e]=c.defaultOptions.marker[e]);a.position instanceof google.maps.LatLng||(a.position=new google.maps.LatLng(0,0)),d=new google.maps.Marker(a),Object.keys(b).length>0;for(var f in b)f&&google.maps.event.addListener(d,f,b[f]);return d},e=function(e,f,g,h){h=h[0]||h[1];var i,j=a.orgAttributes(f),k=a.filter(g),l=a.getOptions(k,e,{scope:e}),m=a.getEvents(e,k);l.position instanceof google.maps.LatLng||(i=l.position);var n=d(l,m);h.addObject("markers",n),i&&c.getGeoLocation(i).then(function(a){n.setPosition(a),l.centered&&n.map.setCenter(a);var c=g.geoCallback;c&&b(c)(e)}),h.observeAttrSetObj(j,g,n),f.bind("$destroy",function(){h.deleteObject("markers",n)})},f=function(d,f,g){return a=d,b=f,c=g,{restrict:"E",require:["^?map","?^ngMap"],link:e}};f.$inject=["Attr2MapOptions","$parse","NgMap"],angular.module("ngMap").directive("marker",f)}(),function(){angular.module("ngMap").directive("overlayMapType",["NgMap",function(a){return{restrict:"E",require:["?^map","?^ngMap"],link:function(b,c,d,e){e=e[0]||e[1];var f=d.initMethod||"insertAt",g=b[d.object];a.getMap().then(function(a){if("insertAt"==f){var b=parseInt(d.index,10);a.overlayMapTypes.insertAt(b,g)}else"push"==f&&a.overlayMapTypes.push(g)}),e.addObject("overlayMapTypes",g)}}}])}(),function(){var a=function(a,b){var c=a,d=function(a,d,e,f){if("false"===e.placesAutoComplete)return!1;var g=c.filter(e),h=c.getOptions(g,{scope:a}),i=c.getEvents(a,g),j=new google.maps.places.Autocomplete(d[0],h);for(var k in i)google.maps.event.addListener(j,k,i[k]);var l=function(){b(function(){f&&f.$setViewValue(d.val())},100)};google.maps.event.addListener(j,"place_changed",l),d[0].addEventListener("change",l),e.$observe("types",function(a){if(a){var b=c.toOptionValue(a,{key:"types"});j.setTypes(b)}})};return{restrict:"A",require:"?ngModel",link:d}};a.$inject=["Attr2MapOptions","$timeout"],angular.module("ngMap").directive("placesAutoComplete",a)}(),function(){var a=function(a,b){var c,d=a.name;switch(delete a.name,d){case"circle":a.center instanceof google.maps.LatLng||(a.center=new google.maps.LatLng(0,0)),c=new google.maps.Circle(a);break;case"polygon":c=new google.maps.Polygon(a);break;case"polyline":c=new google.maps.Polyline(a);break;case"rectangle":c=new google.maps.Rectangle(a);break;case"groundOverlay":case"image":var e=a.url,f={opacity:a.opacity,clickable:a.clickable,id:a.id};c=new google.maps.GroundOverlay(e,a.bounds,f)}for(var g in b)b[g]&&google.maps.event.addListener(c,g,b[g]);return c},b=function(b,c,d){var e=b,f=function(b,f,g,h){h=h[0]||h[1];var i,j,k=e.orgAttributes(f),l=e.filter(g),m=e.getOptions(l,{scope:b}),n=e.getEvents(b,l);j=m.name,m.center instanceof google.maps.LatLng||(i=m.center);var o=a(m,n);h.addObject("shapes",o),i&&"circle"==j&&d.getGeoLocation(i).then(function(a){o.setCenter(a),o.centered&&o.map.setCenter(a);var d=g.geoCallback;d&&c(d)(b)}),h.observeAttrSetObj(k,g,o),f.bind("$destroy",function(){h.deleteObject("shapes",o)})};return{restrict:"E",require:["?^map","?^ngMap"],link:f}};b.$inject=["Attr2MapOptions","$parse","NgMap"],angular.module("ngMap").directive("shape",b)}(),function(){var a=function(a,b){var c=a,d=function(a,b,c){var d,e;b.container&&(e=document.getElementById(b.container),e=e||document.querySelector(b.container)),e?d=new google.maps.StreetViewPanorama(e,b):(d=a.getStreetView(),d.setOptions(b));for(var f in c)f&&google.maps.event.addListener(d,f,c[f]);return d},e=function(a,e,f){var g=c.filter(f),h=c.getOptions(g,{scope:a}),i=c.getControlOptions(g),j=angular.extend(h,i),k=c.getEvents(a,g);b.getMap().then(function(a){var b=d(a,j,k);a.setStreetView(b),!b.getPosition()&&b.setPosition(a.getCenter()),google.maps.event.addListener(b,"position_changed",function(){b.getPosition()!==a.getCenter()&&a.setCenter(b.getPosition())});var c=google.maps.event.addListener(a,"center_changed",function(){b.setPosition(a.getCenter()),google.maps.event.removeListener(c)})})};return{restrict:"E",require:["?^map","?^ngMap"],link:e}};a.$inject=["Attr2MapOptions","NgMap"],angular.module("ngMap").directive("streetViewPanorama",a)}(),function(){angular.module("ngMap").directive("trafficLayer",["Attr2MapOptions",function(a){var b=a,c=function(a,b){var c=new google.maps.TrafficLayer(a);for(var d in b)google.maps.event.addListener(c,d,b[d]);return c};return{restrict:"E",require:["?^map","?^ngMap"],link:function(a,d,e,f){f=f[0]||f[1];var g=b.orgAttributes(d),h=b.filter(e),i=b.getOptions(h,{scope:a}),j=b.getEvents(a,h),k=c(i,j);f.addObject("trafficLayers",k),f.observeAttrSetObj(g,e,k),d.bind("$destroy",function(){f.deleteObject("trafficLayers",k)})}}}])}(),function(){angular.module("ngMap").directive("transitLayer",["Attr2MapOptions",function(a){var b=a,c=function(a,b){var c=new google.maps.TransitLayer(a);for(var d in b)google.maps.event.addListener(c,d,b[d]);return c};return{restrict:"E",require:["?^map","?^ngMap"],link:function(a,d,e,f){f=f[0]||f[1];var g=b.orgAttributes(d),h=b.filter(e),i=b.getOptions(h,{scope:a}),j=b.getEvents(a,h),k=c(i,j);f.addObject("transitLayers",k),f.observeAttrSetObj(g,e,k),d.bind("$destroy",function(){f.deleteObject("transitLayers",k)})}}}])}(),function(){var a=/([\:\-\_]+(.))/g,b=/^moz([A-Z])/,c=function(){return function(c){return c.replace(a,function(a,b,c,d){return d?c.toUpperCase():c}).replace(b,"Moz$1")}};angular.module("ngMap").filter("camelCase",c)}(),function(){var a=function(){return function(a){try{return JSON.parse(a),a}catch(b){return a.replace(/([\$\w]+)\s*:/g,function(a,b){return'"'+b+'":'}).replace(/'([^']+)'/g,function(a,b){return'"'+b+'"'})}}};angular.module("ngMap").filter("jsonize",a)}(),function(){var isoDateRE=/^(\d{4}\-\d\d\-\d\d([tT][\d:\.]*)?)([zZ]|([+\-])(\d\d):?(\d\d))?$/,Attr2MapOptions=function($parse,$timeout,$log,NavigatorGeolocation,GeoCoder,camelCaseFilter,jsonizeFilter){var orgAttributes=function(a){a.length>0&&(a=a[0]);for(var b={},c=0;c<a.attributes.length;c++){var d=a.attributes[c];b[d.name]=d.value}return b},getJSON=function(a){var b=/^[\+\-]?[0-9\.]+,[ ]*\ ?[\+\-]?[0-9\.]+$/;return a.match(b)&&(a="["+a+"]"),JSON.parse(jsonizeFilter(a))},getLatLng=function(a){var b=a;return a[0].constructor==Array?b=a.map(function(a){return new google.maps.LatLng(a[0],a[1])}):!isNaN(parseFloat(a[0]))&&isFinite(a[0])&&(b=new google.maps.LatLng(b[0],b[1])),b},toOptionValue=function(input,options){var output;try{output=getNumber(input)}catch(err){try{var output=getJSON(input);if(output instanceof Array)output=output[0].constructor==Object?output:getLatLng(output);else if(output===Object(output)){var newOptions=options;newOptions.doNotConverStringToNumber=!0,output=getOptions(output,newOptions)}}catch(err2){if(input.match(/^[A-Z][a-zA-Z0-9]+\(.*\)$/))try{var exp="new google.maps."+input;output=eval(exp)}catch(a){output=input}else if(input.match(/^([A-Z][a-zA-Z0-9]+)\.([A-Z]+)$/))try{var matches=input.match(/^([A-Z][a-zA-Z0-9]+)\.([A-Z]+)$/);output=google.maps[matches[1]][matches[2]]}catch(a){output=input}else if(input.match(/^[A-Z]+$/))try{var capitalizedKey=options.key.charAt(0).toUpperCase()+options.key.slice(1);options.key.match(/temperatureUnit|windSpeedUnit|labelColor/)?(capitalizedKey=capitalizedKey.replace(/s$/,""),output=google.maps.weather[capitalizedKey][input]):output=google.maps[capitalizedKey][input]}catch(a){output=input}else if(input.match(isoDateRE))try{output=new Date(input)}catch(a){output=input}else if(input.match(/^{/)&&options.scope)try{var expr=input.replace(/{{/,"").replace(/}}/g,"");output=options.scope.$eval(expr)}catch(a){output=input}else output=input}}if(("center"==options.key||"center"==options.key)&&output instanceof Array&&(output=new google.maps.LatLng(output[0],output[1])),"bounds"==options.key&&output instanceof Array&&(output=new google.maps.LatLngBounds(output[0],output[1])),"icons"==options.key&&output instanceof Array)for(var i=0;i<output.length;i++){var el=output[i];el.icon.path.match(/^[A-Z_]+$/)&&(el.icon.path=google.maps.SymbolPath[el.icon.path])}if("icon"==options.key&&output instanceof Object){(""+output.path).match(/^[A-Z_]+$/)&&(output.path=google.maps.SymbolPath[output.path]);for(var key in output){var arr=output[key];"anchor"==key||"origin"==key||"labelOrigin"==key?output[key]=new google.maps.Point(arr[0],arr[1]):"size"!=key&&"scaledSize"!=key||(output[key]=new google.maps.Size(arr[0],arr[1]))}}return output},getAttrsToObserve=function(a){var b=[];if(!a.noWatcher)for(var c in a){var d=a[c];d&&d.match(/\{\{.*\}\}/)&&b.push(camelCaseFilter(c))}return b},filter=function(a){var b={};for(var c in a)c.match(/^\$/)||c.match(/^ng[A-Z]/)||(b[c]=a[c]);return b},getOptions=function(a,b){b=b||{};var c={};for(var d in a)if(a[d]||0===a[d]){if(d.match(/^on[A-Z]/))continue;if(d.match(/ControlOptions$/))continue;"string"!=typeof a[d]?c[d]=a[d]:b.doNotConverStringToNumber&&a[d].match(/^[0-9]+$/)?c[d]=a[d]:c[d]=toOptionValue(a[d],{key:d,scope:b.scope})}return c},getEvents=function(a,b){var c={},d=function(a){return"_"+a.toLowerCase()},e=function(b){var c=b.match(/([^\(]+)\(([^\)]*)\)/),d=c[1],e=c[2].replace(/event[ ,]*/,""),f=$parse("["+e+"]");return function(b){function c(a,b){return a[b]}var e=f(a),g=d.split(".").reduce(c,a);g&&g.apply(this,[b].concat(e)),$timeout(function(){a.$apply()})}};for(var f in b)if(b[f]){if(!f.match(/^on[A-Z]/))continue;var g=f.replace(/^on/,"");g=g.charAt(0).toLowerCase()+g.slice(1),g=g.replace(/([A-Z])/g,d);var h=b[f];c[g]=new e(h)}return c},getControlOptions=function(a){var b={};if("object"!=typeof a)return!1;for(var c in a)if(a[c]){if(!c.match(/(.*)ControlOptions$/))continue;var d=a[c],e=d.replace(/'/g,'"');e=e.replace(/([^"]+)|("[^"]+")/g,function(a,b,c){return b?b.replace(/([a-zA-Z0-9]+?):/g,'"$1":'):c});try{var f=JSON.parse(e);for(var g in f)if(f[g]){var h=f[g];if("string"==typeof h?h=h.toUpperCase():"mapTypeIds"===g&&(h=h.map(function(a){return a.match(/^[A-Z]+$/)?google.maps.MapTypeId[a.toUpperCase()]:a})),"style"===g){var i=c.charAt(0).toUpperCase()+c.slice(1),j=i.replace(/Options$/,"")+"Style";f[g]=google.maps[j][h]}else"position"===g?f[g]=google.maps.ControlPosition[h]:f[g]=h}b[c]=f}catch(a){}}return b};return{filter:filter,getOptions:getOptions,getEvents:getEvents,getControlOptions:getControlOptions,toOptionValue:toOptionValue,getAttrsToObserve:getAttrsToObserve,orgAttributes:orgAttributes}};Attr2MapOptions.$inject=["$parse","$timeout","$log","NavigatorGeolocation","GeoCoder","camelCaseFilter","jsonizeFilter"],angular.module("ngMap").service("Attr2MapOptions",Attr2MapOptions)}(),function(){var a,b=function(b){var c=a.defer(),d=new google.maps.Geocoder;return d.geocode(b,function(a,b){b==google.maps.GeocoderStatus.OK?c.resolve(a):c.reject(b)}),c.promise},c=function(c){return a=c,{geocode:b}};c.$inject=["$q"],angular.module("ngMap").service("GeoCoder",c)}(),function(){var a,b=function(b){var c=a.defer();return navigator.geolocation?(void 0===b?b={timeout:5e3}:void 0===b.timeout&&(b.timeout=5e3),navigator.geolocation.getCurrentPosition(function(a){c.resolve(a)},function(a){c.reject(a)},b)):c.reject("Browser Geolocation service failed."),c.promise},c=function(c){return a=c,{getCurrentPosition:b}};c.$inject=["$q"],angular.module("ngMap").service("NavigatorGeolocation",c)}(),function(){var a,b,c,d=[],e=function(c){var e=b.createElement("div");e.style.width="100%",e.style.height="100%",c.appendChild(e);var f=new a.google.maps.Map(e,{});return d.push(f),f},f=function(a){for(var b,c=0;c<d.length;c++){var e=d[c];if(!e.inUse){var f=e.getDiv();a.appendChild(f),b=e;break}}return b},g=function(a){var b=f(a);return b?c(function(){google.maps.event.trigger(b,"idle")},100):b=e(a),b.inUse=!0,b},h=function(a){a.inUse=!1},i=function(){for(var a=0;a<d.length;a++)d[a]=null;d=[]},j=function(e,f,j){return b=e[0],a=f,c=j,{mapInstances:d,resetMapInstances:i,getMapInstance:g,returnMapInstance:h}};j.$inject=["$document","$window","$timeout"],angular.module("ngMap").factory("NgMapPool",j)}(),function(){var a,b,c,d,e,f,g,h={},i=function(c,d){var e;return c.currentStyle?e=c.currentStyle[d]:a.getComputedStyle&&(e=b.defaultView.getComputedStyle(c,null).getPropertyValue(d)),e},j=function(a){var b=h[a||0];if(!(b.map instanceof google.maps.Map))return b.initializeMap(),b.map},k=function(b){function d(b){h[f]?e.resolve(h[f].map):b>g?e.reject("could not find map"):a.setTimeout(function(){d(b+100)},100)}b=b||{};var e=c.defer(),f=b.id||0,g=b.timeout||2e3;return d(0),e.promise},l=function(a){if(a.map){var b=Object.keys(h).length;h[a.map.id||b]=a}},m=function(a){var b=Object.keys(h).length-1,c=a.map.id||b;if(a.map){for(var d in a.eventListeners){var e=a.eventListeners[d];google.maps.event.removeListener(e)}a.map.controls&&a.map.controls.forEach(function(a){a.clear()})}a.map.heatmapLayers&&Object.keys(a.map.heatmapLayers).forEach(function(b){a.deleteObject("heatmapLayers",a.map.heatmapLayers[b])}),delete h[c]},n=function(a,b){var e=c.defer();return!a||a.match(/^current/i)?d.getCurrentPosition(b).then(function(a){var b=a.coords.latitude,c=a.coords.longitude,d=new google.maps.LatLng(b,c);e.resolve(d)},function(a){e.reject(a)}):f.geocode({address:a}).then(function(a){e.resolve(a[0].geometry.location)},function(a){e.reject(a)}),e.promise},o=function(a,b){return function(c){if(c){var d=g("set-"+a),f=e.toOptionValue(c,{key:a});b[d]&&(a.match(/center|position/)&&"string"==typeof f?n(f).then(function(a){b[d](a)}):b[d](f))}}},p=function(a){var b=a.getAttribute("default-style");"true"==b?(a.style.display="block",a.style.height="300px"):("block"!=i(a,"display")&&(a.style.display="block"),i(a,"height").match(/^(0|auto)/)&&(a.style.height="300px"))};angular.module("ngMap").provider("NgMap",function(){var h={};this.setDefaultOptions=function(a){h=a};var i=function(i,q,r,s,t,u,v){return a=i,b=q[0],c=r,d=s,e=t,f=u,g=v,{defaultOptions:h,addMap:l,deleteMap:m,getMap:k,initMap:j,setStyle:p,getGeoLocation:n,observeAndSet:o}};i.$inject=["$window","$document","$q","NavigatorGeolocation","Attr2MapOptions","GeoCoder","camelCaseFilter"],this.$get=i})}(),function(){var a,b=function(b,c){c=c||b.getCenter();var d=a.defer(),e=new google.maps.StreetViewService;return e.getPanoramaByLocation(c||b.getCenter,100,function(a,b){b===google.maps.StreetViewStatus.OK?d.resolve(a.location.pano):d.resolve(!1)}),d.promise},c=function(a,b){var c=new google.maps.StreetViewPanorama(a.getDiv(),{enableCloseButton:!0});c.setPano(b)},d=function(d){return a=d,{getPanorama:b,setPanorama:c}};d.$inject=["$q"],angular.module("ngMap").service("StreetView",d)}(),"ngMap"}),angular.module("botConfApp").controller("MainCtrl",["$scope","ConfigService","$location",function(a,b,c){b.loadConfig().then(function(b){a.config=b}),a.resetConfig=function(){b.defaultConfig().then(function(b){a.config=b})},a.hasTask=function(a){return b.hasTask(a)},a.saveToPc=function(a,b){if(!a)return void console.error("No data");b||(b="download.json"),"object"==typeof a&&(a=JSON.stringify(a,void 0,2));var c=new Blob([a],{type:"text/json"});if(window.navigator&&window.navigator.msSaveOrOpenBlob)window.navigator.msSaveOrOpenBlob(c,b);else{var d=document.createEvent("MouseEvents"),e=document.createElement("a");
e.download=b,e.href=window.URL.createObjectURL(c),e.dataset.downloadurl=["text/json",e.download,e.href].join(":"),d.initEvent("click",!0,!1,window,0,0,0,0,0,!1,!1,!1,!1,0,null),e.dispatchEvent(d)}},a.isActive=function(a){return a===c.path()}}]),angular.module("botConfApp").controller("GeneralCtrl",["$scope","NgMap",function(a,b){a.marker=null,a.map_options={center:[-117.38061189651489,33.93955043249883]},a.marker={},a.placeMarker=function(b){a.marker={lat:b.latLng.lat(),lng:b.latLng.lng()},a.setCoords(b)},a.setCoords=function(b){b.latLng&&(a.config.location=b.latLng.lat()+","+b.latLng.lng())},b.getMap().then(function(b){a.map=b})}]),angular.module("botConfApp").controller("ReleaseCtrl",["$scope",function(a){a.remove=function(b){delete a.config.release[b]},a.catch_search="",a.addPokemon=function(b,c){console.log(b,c),a.config[b][c]||(a.config[b][c]={logic:"or"})}}]),angular.module("botConfApp").controller("ItemCtrl",["$scope","DataService","ConfigService","$rootScope",function(a,b,c,d){b.itemList().then(function(b){a.items=b});var e=c.getTask("RecycleItems");a.keepItems=e.config.item_filter,a.$watch("keepItems",function(b){if(b){var d=0;angular.forEach(b,function(b,e){if(b.keep){var f=parseInt(b.keep);c.setTaskConfig("RecycleItems",{item_filter:a.keepItems}),d+=f}}),a.spaceTaken=d}},!0)}]),angular.module("botConfApp").controller("CaptureCtrl",["$scope",function(a){a.remove=function(b){delete a.config.catch[b]},a.catch_search="",a.addPokemon=function(b,c){console.log(b,c),a.config[b][c]||(a.config[b][c]={logic:"or"})}}]),angular.module("botConfApp").controller("EvolveCtrl",["$scope","DataService","ConfigService",function(a,b,c){b.pokemonList().then(function(b){a.pokemons=b}),a.evolveThose={};var d=c.getTask("EvolveAll"),e=d.config.evolve_all.split(",");angular.forEach(e,function(b){a.evolveThose[b]=!0}),a.$watch("evolveThose",function(a){if(0!==Object.keys(a).length&&a.constructor===Object){var b=[];angular.forEach(a,function(a,c){a&&b.push(c)}),b.length>0?c.setTaskConfig("EvolveAll",{evolve_all:b.join(",")}):c.setTaskConfig("EvolveAll",{evolve_all:"NONE"})}},!0)}]),angular.module("botConfApp").controller("NavigatorCtrl",["$scope","NgMap","ConfigService",function(a,b,c){a.task_config=c.getTask("FollowPath"),a.marker=null,a.map_options={center:[-117.38061189651489,33.93955043249883]};var d=function(c){b.getMap().then(function(b){a.map=b,c&&c(b)})};d(),a.mode="drag",a.setMode=function(b){a.mode=b,"route"==b&&(a.path=[[]])},a.travelMode="WALKING",a.startPoint="",a.endPoint="",a.startPlaceChanged=function(){a.startPoint=this.getPlace(),a.start=a.startPoint.geometry.location.lat()+", "+a.startPoint.geometry.location.lng(),a.map.setCenter(a.startPoint.geometry.location)},a.endPlaceChanged=function(){a.endPoint=this.getPlace(),a.end=a.endPoint.geometry.location.lat()+", "+a.endPoint.geometry.location.lng(),a.map.setCenter(a.endPoint.geometry.location)},a.addMarkerAndPath=function(b){"draw"==a.mode&&(a.path[0]&&!a.path[0][1]?a.path[0]=[b.latLng.lat(),b.latLng.lng()]:a.path.push([b.latLng.lat(),b.latLng.lng()]))},a.saveRoute=function(b,c){var d=[];"gmaps"==b&&(angular.forEach(c,function(a){angular.forEach(a.path,function(a){d.push({lat:a.lat(),lng:a.lng(),location:a.lat()+", "+a.lng()})})}),console.log(d)),"draw"==b&&angular.forEach(a.path,function(a){d.push({lat:a[0],lng:a[1],location:a[0]+", "+a[1]})}),d&&a.saveToPc(d,"path.json")},a.clearPath=function(){var b=a.config.location.split(",");a.path=[b]},a.clearPath()}]),angular.module("botConfApp").service("DataService",["$http",function(a){return{pokemonList:function(){return a.get("./data/pokemon.json").then(function(a){return a.data})},itemList:function(){return a.get("./data/items.json").then(function(a){return a.data})},defaultConfig:function(){return a.get("./data/default_config.json").then(function(a){return a.data})}}}]),angular.module("botConfApp").directive("pokemonSelect",["DataService",function(a){return{templateUrl:"./views/partials/pokemon_select.html",restrict:"E",scope:{action:"&"},controller:["$scope",function(b){b.toggleDropdown=function(a){a.preventDefault(),a.stopPropagation(),b.status.isopen=!b.status.isopen},a.pokemonList().then(function(a){b.pokemons=a}),b.btnClick=function(a){b.action({list:b.list,pokemon:a})}}]}}]),angular.module("botConfApp").directive("configTextarea",function(){return{restrict:"A",link:function(a,b,c){b.on("click",function(){$window.getSelection().toString()||this.setSelectionRange(0,this.value.length)})}}}),angular.module("botConfApp").directive("fallbackSrc",function(){var a={link:function(a,b,c){b.bind("error",function(){angular.element(this).attr("src",c.fallbackSrc)})}};return a}),angular.module("botConfApp").filter("keyfilter",function(){return function(a,b){var c={};return b?(angular.forEach(a,function(a,d){d.toString().toLowerCase().indexOf(b.toString().toLowerCase())!==-1&&(c[d]=a)}),c):a}}),angular.module("botConfApp").filter("itemfilter",function(){return function(a,b){var c={};return b?(angular.forEach(a,function(a,d){a.toString().toLowerCase().indexOf(b.toString().toLowerCase())!==-1&&(c[d]=a)}),c):a}}),angular.module("botConfApp").controller("GetConfigCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("botConfApp").service("ConfigService",["$http","localStorageService","$timeout","$q",function(a,b,c,d){var e;return{loadConfig:function(){if(b.isSupported=!1,b.isSupported){var a=b.get("config");if(a){var f=d.defer();return e=a,c(function(){f.resolve(a)},5),f.promise}return this.defaultConfig()}return this.defaultConfig()},defaultConfig:function(){return a.get("./data/default_config.json").then(function(a){return e=a.data,a.data})},saveConfig:function(){b.isSupported&&b.set("config",e)},availableTasks:function(){return a.get("./data/available_tasks.json").then(function(a){return a.data})},getTasks:function(a){return e.tasks},setTasks:function(a){e.tasks=a,this.saveConfig()},getTask:function(a,b){var c,d=b?b:e.tasks;return angular.forEach(d,function(b){b.type==a&&(c=b)}),c},setTaskConfig:function(a,b){angular.forEach(e.tasks,function(c){c.type==a&&(c.config=angular.merge(c.config,b))}),this.saveConfig()},hasTask:function(a){var b=!1;return angular.forEach(e.tasks,function(c){c.type==a&&(b=!0)}),b}}}]),angular.module("botConfApp").controller("TaskCtrl",["$scope","ConfigService",function(a,b){a.tasks=b.getTasks(),b.availableTasks().then(function(b){a.availableTasks=b}),a.$watch("tasks",function(a){b.setTasks(a)},!0),a.startDrag=function(){},a.addTask=function(b){var c=angular.copy(b);a.tasks.push(c)},a.deleteTask=function(b){a.tasks.splice(b,1)},a.editTask=function(a){}}]),angular.module("botConfApp").controller("EditTaskCtrl",["$scope","ConfigService","$routeParams",function(a,b,c){b.availableTasks().then(function(d){console.log(b.getTask(c.task,d)),a.task_options=b.getTask(c.task,d).config});var d=["RecycleItems","EvolveAll","TransferPokemon","CatchVisiblePokemon","CatchLuredPokemon","FollowPath"];if(a.use_ng_include=!1,d.indexOf(c.task)==-1)a.task_config=b.getTask(c.task).config;else{a.use_ng_include=!0;var e,f=c.task;switch(f){case"FollowPath":e="navigator.html";break;case"EvolveAll":e="evolve_config.html";break;case"TransferPokemon":e="release_config.html";break;case"CatchVisiblePokemon":case"CatchLuredPokemon":e="capture_config.html";break;default:e=f+".html"}console.log(e),a.include_src="./views/tasks/"+e}}]),angular.module("botConfApp").filter("typeof",function(){return function(a){return typeof a}}),angular.module("botConfApp").run(["$templateCache",function(a){a.put("views/edit_task.html",'<a class="btn btn-success goBack" ng-href="#/task-config"> Go back </a> <div ng-include="include_src" ng-if="use_ng_include"></div> <div ng-if="task.config || task.type == \'TransferPokemon\' || task.type == \'CatchVisiblePokemon\' || task.type == \'CatchLuredPokemon\'"></div> <div class="row" ng-if="!use_ng_include"> <table class="table table-bordered"> <tr ng-repeat="(k, v) in task_options"> <td style="max-width: 150px"> {{k}} </td> <td> <input type="checkbox" ng-model="task_config[k]" ng-if="(v | typeof)== \'boolean\' "> <input type="text" class="form-control" ng-model="task_config[k]" ng-if="(v | typeof) != \'boolean\' "> </td> </tr> </table> </div>'),a.put("views/general_config.html",'<div class="row"> <div class="col-xs-12 col-md-6"> <h4>General info</h4> <table class="table-responsive table"> <tr> <td>Auth type</td> <td> <select ng-model="config.auth_service"> <option value="ptc">PTC</option> <option value="google">Google</option> </select> </td> </tr> <tr> <td>Username</td> <td> <input type="text" ng-model="config.username" class="form-control"> </td> </tr> <tr> <td>Password</td> <td> <input type="password" ng-model="config.password" class="form-control"> </td> </tr> <tr> <td>Google Maps api key</td> <td> <input type="text" ng-model="config.gmapkey" class="form-control"> <small>Get one <a href="https://console.developers.google.com/flows/enableapi?apiid=maps_backend,geocoding_backend,directions_backend,distance_matrix_backend,elevation_backend,places_backend&keyType=CLIENT_SIDE&reusekey=true" target="_blank">here</a></small> </td> </tr> <tr> <td>Max steps</td> <td> <input type="text" ng-model="config.max_steps" class="form-control"> </td> </tr> <tr> <td>Walk speed (in ms/h)</td> <td> <input type="text" ng-model="config.walk" class="form-control"> </td> </tr> <tr> <td>Wait times</td> <td> <div class="input-group"> <input type="text" ng-model="config.action_wait_min" class="form-control"> <div class="input-group-addon"> Seconds minimal</div> </div> <br> <div class="input-group"> <input type="text" ng-model="config.action_wait_max" class="form-control"> <div class="input-group-addon"> Seconds maximal</div> </div> </td> </tr> <tr> <td>Health record</td> <td> <input type="checkbox" ng-model="config.health_record"> </td> </tr> <tr> <td>Location cache</td> <td> <input type="checkbox" ng-model="config.location_cache"> </td> </tr> <tr> <td>Distance unit</td> <td> <select ng-model="config.distance_unit"> <option value="km">Kilometers</option> <option value="mi">Miles</option> <option value="ft">Feet</option> </select> </td> </tr> </table> </div> <div class="col-xs-12 col-md-6"> <h4>Select start location</h4> Click on the map to set your start location <ng-map zoom="13" center="52.375457,4.8761486" on-click="placeMarker(event)"> <marker position="{{ config.location }}" draggable="true" on-dragend="setCoords(event)" animation="Animation.DROP"></marker> </ng-map> <div> Current start location: {{config.location}} </div> </div> </div>'),a.put("views/get_config.html",'<button class="btn btn-success" uib-tooltip="Download config" ng-click="saveToPc(config, \'config.json\')"><i class="glyphicon glyphicon-download-alt"></i> Download config</button> <br> <br> <br> <textarea style="width: 100%; height: 500px">\n    {{config | json}}\n</textarea>'),a.put("views/manage_tasks.html",'<div class="row"> <div class="col-xs-12"> <h4>Manage tasks</h4> </div> </div> <div class="row"> <div class="col-xs-12" ng-init="open = false"> <div class="btn-group" uib-dropdown is-open="status.isopen"> <button id="single-button" type="button" class="btn btn-success" uib-dropdown-toggle> Add task <span class="caret"></span> </button> <ul class="dropdown-menu taskmenu" uib-dropdown-menu role="menu" aria-labelledby="single-button"> <li role="menuitem" ng-repeat="task in availableTasks track by $index"><a ng-click="addTask(task)">{{task.type}}</a> </li> </ul> </div> <table class="table table-responsive table-bordered taskTable"> <thead> <tr> <td></td> <td>Task</td> <td class="text-right">Actions</td> </tr> </thead> <tbody ui-sortable ng-model="tasks"> <tr ng-repeat="task in tasks" class="item"> <td class="dragger"><span class="glyphicon glyphicon-resize-vertical" aria-hidden="true" style="cursor:move"></span></td> <td class="title">{{task.type}}</td> <td class="actions text-right"> <a ng-href="#/task-config/{{task.type}}" uib-tooltip="Edit task" ng-click="editTask(task)" ng-if="task.config || task.type == \'TransferPokemon\' || task.type == \'CatchVisiblePokemon\' || task.type == \'CatchLuredPokemon\'"><span class="glyphicon glyphicon-edit" aria-hidden="true"> </span></a> <span class="glyphicon glyphicon-remove" aria-hidden="true" uib-tooltip="Delete task" ng-click="deleteTask($index)"> </span> </td> </tr> </tbody> </table> </div> </div>'),a.put("views/partials/pokemon_select.html",'<form class="form-inline pokemonSelect"> <div class="form-group"> <div class="input-group"> <div class="input-group-addon">Select pokemon</div> <select title="Select Pokemon" ng-init="selectedPokemon = null" class="form-control" ng-model="selectedPokemon"> <option ng-repeat="pokemon in pokemons" value="{{pokemon.Name}}"> {{pokemon.Name}} </option> </select> </div> </div> <button class="btn btn-default" ng-click="btnClick(selectedPokemon)">Add</button> </form>'),a.put("views/tasks/RecycleItems.html",'<div class="row" ng-controller="ItemCtrl" ng-init="item_search = \'\'"> <div class="col-xs-12"> <h4>Item filter</h4> <div uib-alert ng-class="\'alert-info\'"> Numbers shown are the amount to keep of that item </div> </div> <div class="col-xs-12"> Space used: {{spaceTaken}} / 350 </div> <div class="col-xs-12"> <div class="input-group"> <div class="input-group-addon">Search</div> <input type="text" ng-model="item_search" class="form-control"> </div> </div> <!-- @TODO List space used / space available --> <div class="col-xs-4 col-md-2 margin-bottom-10" ng-repeat="(itemId, item) in items | itemfilter:item_search"> <img ng-src="./images/items/{{itemId}}.png" class="img-responsive" fallback-src="./images/items/0.png"> <label>{{item}}</label><br> <input type="number" class="form-control" ng-model="keepItems[item].keep"> </div> </div>'),a.put("views/tasks/capture_config.html",'<div class="row" ng-controller="CaptureCtrl"> <div class="col-xs-12"> <pokemon-select action="addPokemon(\'catch\', pokemon)"></pokemon-select> </div> <div class="col-xs-12"> <div class="input-group"> <div class="input-group-addon">Search</div> <input type="text" ng-model="catch_search" class="form-control"> </div> </div> <div class="col-xs-12 col-md-12"> <table class="table table-responsive table-striped"> <thead> <tr> <td>Name</td> <td>Catch above CP</td> <td>Catch above IV</td> <td>Always catch</td> <td>Used logic</td> <td></td> </tr> </thead> <tr ng-repeat="(key, item) in config.catch | keyfilter:catch_search" id="catch_{{key}}"> <td> {{key}} </td> <td> <a href="#" editable-number="item.catch_above_cp">{{ item.catch_above_cp || \'0\'}}</a> </td> <td> <a href="#" editable-number="item.catch_above_iv">{{ item.catch_above_iv || \'0\'}}</a> </td> <td> <input type="checkbox" ng-model="item.always_catch"> </td> <td> <select ng-model="item.logic"> <option value="or">Or</option> <option value="and">And</option> </select> </td> <td class="remove_row"> <i class="glyphicon glyphicon-trash" ng-click="remove(key)"></i> </td> </tr> </table> </div> </div>'),a.put("views/tasks/evolve_config.html",'<div ng-controller="EvolveCtrl"> <div class="row"> <div class="col-xs-12"> <table class="table"> <tr> <td> Evolve captured </td> <td> <input type="checkbox" ng-model="config.evolve_captured"> </td> </tr> </table> </div> <div class="col-xs-12"> <div class="input-group"> <div class="input-group-addon">Search</div> <input type="text" ng-model="evo_search.Name" class="form-control"> </div> </div> </div> <br> <div class="row"> <div class="pokemon_col" ng-repeat="pokemon in pokemons | filter:evo_search" ng-class="{\'pokemon_selected\': evolveThose[pokemon.Name] == true}" ng-if="pokemon[\'Next evolution(s)\']"> <label><img ng-src="./images/pokemon/{{pokemon.Number}}.png" class="pokemon_image"><br> <input type="checkbox" ng-model="evolveThose[pokemon.Name]"> {{pokemon.Name}} </label> </div> </div> </div>'),a.put("views/tasks/navigator.html",'<div class="row navigator" ng-controller="NavigatorCtrl"> <div class="col-xs-12"> <table class="table"> <tr> <td> Path file<br> </td> <td> <input type="text" ng-model="task_config.config.path_file"> </td> </tr> <tr> <td> Path mode<br> linear = bot will turn around at the last waypoint<br> and along the given waypoints in reverse order.<br><br> loop = bot will walk along all specified waypoints <br>and then move directly to the first waypoint again </td> <td> <select ng-model="task_config.config.path_mode"> <option value="loop">Loop</option> <option value="linear">Linear</option> </select> </td> </tr> </table> </div> <div class="col-xs-12" style="margin-bottom: 100px"> <div> <div class="tools"> <div ng-class="{\'active\': mode==\'drag\'}" ng-click="setMode(\'drag\')">Drag</div> <div ng-class="{\'active\': mode==\'draw\'}" ng-click="setMode(\'draw\')">Draw line</div> <div ng-class="{\'active\': mode==\'route\'}" ng-click="setMode(\'route\')">Calculate route</div> </div> <ng-map zoom="13" center="{{config.location}}" class="nav_map" ng-class="{\'drawing\': mode == \'draw\'}" style="display:block;height:500px" map-type-id="ROADMAP" on-click="addMarkerAndPath()"> <shape ng-if="path" name="polyline" path="{{path}}" stroke-color="#FF0000" stroke-opacity="1.0" stroke-weight="3"> </shape> <marker position="{{path[0]}}" label="A" ng-if="path.length >= 0"></marker> <marker position="{{path[path.length-1]}}" label="B" ng-if="path.length > 1"></marker> <directions ng-if="mode == \'route\' && start && end" draggable="true" travel-mode="{{travelMode}}" origin="{{start}}" destination="{{end}}"> </directions> </ng-map> <div ng-if="mode == \'route\'"> <div class="col-xs-6 col-md-4"> <table class="table table-responsive"> <tr> <td> Direction mode </td> <td> <select ng-model="travelMode"> <option value="DRIVING">Driving</option> <option value="WALKING">Walking</option> <option value="BICYCLING">Bicycling</option> <option value="TRANSIT">Transit</option> </select> </td> </tr> <tr> <td>Start</td> <td> <input places-auto-complete ng-model="startPoint" types="\'address\'" on-place-changed="startPlaceChanged()"> </td> </tr> <tr> <td>End</td> <td> <input places-auto-complete ng-model="endPoint" types="\'address\'" on-place-changed="endPlaceChanged()"> </td> </tr> </table> </div> <div class="col-xs-12 col-md-5" ng-if="map.directionsRenderers[0].directions.routes"> <div> Route information: {{map.directionsRenderers[0].directions.routes[0].legs[0].distance.text}} {{map.directionsRenderers[0].directions.routes[0].legs[0].duration.text}} <br> Directions path length: {{map.directionsRenderers[0].directions.routes[0].overview_path.length}} <br> You can change the route by dragging the white points.<br> <b>Once done click the green save button.</b> </div> <button class="btn btn-success" ng-click="saveRoute(\'gmaps\', map.directionsRenderers[0].directions.routes[0].legs[0].steps)"> Save </button> </div> </div> <div class="col-xs-4 col-md-3" ng-if="mode == \'draw\'"> <button class="btn btn-danger" ng-click="clearPath()" ng-if="mode==\'draw\'">Clear path</button> </div> <div class="col-xs-6 col-md-5" ng-if="mode == \'draw\'"> <div> Click on the map to place waypoints.<br> Directions path length: {{path.length}} <br> <b>Once done click the green save button.</b> </div> <button class="btn btn-success" ng-click="saveRoute(\'draw\', path)"> Save </button> </div> </div> </div> </div>'),a.put("views/tasks/release_config.html",'<div class="row" ng-controller="ReleaseCtrl"> <div class="col-xs-12"> <pokemon-select action="addPokemon(\'release\', pokemon)"></pokemon-select> </div> <div class="col-xs-12"> <div uib-alert ng-class="\'alert-info\'"> Note: If you set Keep best CP / Keep best IV, Release below CP and release below IV are ignored </div> <div class="input-group"> <div class="input-group-addon">Search</div> <input type="text" ng-model="release_search" class="form-control"> </div> </div> <div class="col-xs-12 col-md-12"> <table class="table table-responsive table-striped"> <thead> <tr> <td>Name</td> <td>Release below CP</td> <td>Used logic</td> <td>Release below IV</td> <td>Keep best CP</td> <td>Keep best IV</td> <td></td> </tr> </thead> <tr ng-repeat="(key, item) in  config.release | keyfilter:release_search"> <td> {{key}} </td> <td> <a href="#" editable-number="item.release_below_cp" ng-show="!item.keep_best_iv && !item.keep_best_cp">{{ item.release_below_cp || \'Click to edit\'}}</a> <span ng-if="item.keep_best_iv || item.keep_best_cp">Using keep best iv or<br> keep best cp</span> </td> <td> <select ng-model="item.logic"> <option value="or">Or</option> <option value="and">And</option> </select> </td> <td> <a href="#" editable-number="item.release_below_iv" ng-show="!item.catch_above_cp && !item.keep_best_iv">{{ item.keep_best_cp || \'Click to edit\'}}</a> <span ng-if="item.keep_best_iv || item.keep_best_cp">Using keep best iv or<br> keep best cp</span> </td> <td> <a href="#" editable-number="item.keep_best_iv" e-min="0" ng-if="!item.catch_above_cp && !item.catch_above_iv">{{ item.keep_best_iv || \'Click to edit\'}}</a> </td> <td> <a href="#" editable-number="item.keep_best_cp" e-min="0" ng-if="!item.catch_above_cp && !item.catch_above_iv">{{ item.keep_best_cp || \'Click to edit\'}}</a> </td> <td class="remove_row"> <i class="glyphicon glyphicon-trash" ng-click="remove(key)"></i> </td> </tr> </table> </div> </div>')}]);